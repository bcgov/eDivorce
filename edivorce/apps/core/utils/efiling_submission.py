import json
import logging
import requests
import uuid

from django.conf import settings
from django.core.exceptions import PermissionDenied

from .efiling_packaging import EFilingPackaging
from .efiling_hub_api import EFilingHubApi

logger = logging.getLogger(__name__)


class EFilingSubmission(EFilingHubApi):

    def __init__(self, initial_filing):
        self.initial_filing = initial_filing
        self.packaging = EFilingPackaging(initial_filing)
        self.submission_id = None
        self.access_token = None
        self.refresh_token = None
        EFilingHubApi.__init__(self)

    def _get_transaction(self, request):
        """
        Get the current transaction id stored in session, otherwise generate one.
        :param request:
        :return:
        """
        guid = request.session.get('transaction_id', None)
        if not guid:
            guid = str(uuid.uuid4())
            request.session['transaction_id'] = guid
        return guid

    def upload(self, request, responses, files, documents=None, parties=None):
        """
        Does an initial upload of documents and gets the generated eFiling Hub url.
        :param parties:
        :param request:
        :param files: Files need to be a list of tuples in the form ('files': (filename, filecontent))
        :return: The url for redirect and any error messages
        """
        # Find the transaction id .. this will be a unique guid generated by eDivorce thats passed to Efiling Hub. We
        # will tie it to the session.

        transaction_id = self._get_transaction(request)
        bceid_guid = self._get_bceid(request)

        # if bceid_guid is None .. we basically have an anonymous user so raise an error
        if bceid_guid is None:
            raise PermissionDenied()

        url = f'{self.api_base_url}/submission/documents'
        print('DEBUG: ' + url)
        try:
            response = self._get_api(request, url, transaction_id,
                                     bceid_guid, headers={}, files=files)
        except:
            return settings.FORCE_SCRIPT_NAME + "dashboard/initial_filing?no_connection=1", None

        if response.status_code == 200:
            response = json.loads(response.text)

            if "submissionId" in response and response['submissionId'] != "":
                # get the redirect url
                headers = {
                    'Content-Type': 'application/json'
                }
                package_data = self.packaging.format_package(request, responses, files, documents)
                url = f"{self.api_base_url}/submission/{response['submissionId']}/generateUrl"
                print('DEBUG: ' + url)
                data = json.dumps(package_data)
                print('DEBUG: ' + data)
                response = self._get_api(request, url, bceid_guid, headers=headers,
                                         transaction_id=transaction_id, data=data)

                if response.status_code == 200:
                    response = json.loads(response.text)
                    return response['efilingUrl'], 'success'

                response = json.loads(response.text)

                if 'details' in response and len(response['details']) > 0:
                    details = ' '.join(response['details'])
                    # clean up the message to make it presentable
                    details = details.replace('[', '').replace(']', '').replace(
                        'FileNumber', 'File number')
                    return None, details

                return None, f"{response['error']} - {response['message']}"

        if response.status_code == 401:
            print(response.headers.get('WWW-Authenticate', ''))
            return None, '401 - Authentication Failed'

        return None, f'{response.status_code} - {response.text}'
